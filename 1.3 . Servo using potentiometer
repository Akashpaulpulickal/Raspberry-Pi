import time
import RPi.GPIO as GPIO
import Adafruit_ADS1x15

# Constants
SERVO_PIN = 26  # Raspberry Pi GPIO pin connected to the servo motor
ADC_CHANNEL = 0  # Analog channel on ADS1015
GAIN = 1  # Gain (1, 2/3, 1, 2, 4, 8, 16)

# Setup GPIO
GPIO.setmode(GPIO.BCM)
GPIO.setup(SERVO_PIN, GPIO.OUT)

# Create PWM instance for servo
servo_pwm = GPIO.PWM(SERVO_PIN, 50)  # 50 Hz frequency
servo_pwm.start(0)  # Initialize servo position

# Create ADS1x15 instance
ads = Adafruit_ADS1x15.ADS1015()

def map_value(value, in_min, in_max, out_min, out_max):
    # Map the input value from one range to another
    return (value - in_min) * (out_max - out_min) / (in_max - in_min) + out_min

try:
    while True:
        # Read the raw ADC value from the potentiometer
        pot_value = ads.read_adc(ADC_CHANNEL, gain=GAIN)

        # Map the ADC value to the servo angle (0 to 180 degrees)
        angle = int(map_value(pot_value, 0, 32767, 0, 180))

        # Control the servo motor according to the angle
        duty_cycle = (angle / 18) + 2.5  # Convert angle to duty cycle
        servo_pwm.ChangeDutyCycle(duty_cycle)

        print(f"Potentiometer Value: {pot_value}, Servo Angle: {angle}")
        time.sleep(0.1)

except KeyboardInterrupt:
    servo_pwm.stop()
    GPIO.cleanup()
